@model WebStore.Areas.Portal.Models.Product.CreateProductRequestModel

@{
    ViewData["Title"] = "Create";
}

<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ProductTypeId" class="control-label">Product Type</label>
                        <select asp-for="ProductTypeId" class="form-control rounded-0" asp-items="ViewBag.ProductTypeId"></select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="VendorId" class="control-label">Vendor</label>
                        <select asp-for="VendorId" class="form-control rounded-0" asp-items="ViewBag.VendorId"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Name</label>
                        <input asp-for="Name" class="form-control rounded-0" placeholder="Enter Name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Alias" class="control-label"></label>
                        <input asp-for="Alias" class="form-control rounded-0" placeholder="Enter Alias" />
                        <span asp-validation-for="Alias" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Price" class="control-label">Price</label>
                        <input asp-for="Price" class="form-control rounded-0" placeholder="Enter Price" type="number" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Discount" class="control-label">Discount</label>
                        <input asp-for="Discount" class="form-control rounded-0" placeholder="Enter Discount" type="number" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="UnitDescription" class="control-label">Unit Description</label>
                <input asp-for="UnitDescription" class="form-control rounded-0" placeholder="Enter Unit Description" />
                <span asp-validation-for="UnitDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Description</label>
                <input asp-for="Description" class="form-control rounded-0" placeholder="Enter Description" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageFiles" class="control-label">Preview Image</label>
                <input id="fileInput" type="file" asp-for="ImageFiles" multiple />
                <span asp-validation-for="ImageFiles" class="text-danger"></span>
            </div>
            <div id="imagePreview"></div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a type="button" asp-action="Index" class="btn btn-danger ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

<script>
    const fileInput = document.getElementById('fileInput');
    const imagePreviewDiv = document.getElementById('imagePreview');
    let allFiles = []; // Array to keep track of all selected files

    function displayImages(files) {
        const newFiles = Array.from(files);

        newFiles.forEach(file => {
            const reader = new FileReader();

            reader.onload = function (e) {
                const container = document.createElement('div');
                container.style.display = 'inline-block';
                container.style.position = 'relative';
                container.style.margin = '10px';

                const img = document.createElement('img');
                img.src = e.target.result;
                img.style.width = '200px'; // Set width or other styles as needed

                const deleteButton = document.createElement('button');
                deleteButton.textContent = 'Remove';
                deleteButton.style.position = 'absolute';
                deleteButton.style.top = '0';
                deleteButton.style.right = '0';
                deleteButton.style.backgroundColor = 'red';
                deleteButton.style.color = 'white';
                deleteButton.style.border = 'none';
                deleteButton.style.cursor = 'pointer';

                deleteButton.addEventListener('click', function () {
                    container.remove(); // Remove the image and button container
                    allFiles = allFiles.filter(f => f !== file); // Remove file from array
                    updateFileInput();
                });

                container.appendChild(img);
                container.appendChild(deleteButton);
                imagePreviewDiv.appendChild(container);
            };

            reader.readAsDataURL(file);
        });

        allFiles = allFiles.concat(newFiles); // Add new files to the allFiles array
        updateFileInput();
    }

    function updateFileInput() {
        const dataTransfer = new DataTransfer();
        allFiles.forEach(file => dataTransfer.items.add(file));
        fileInput.files = dataTransfer.files;
    }

    fileInput.addEventListener('change', function (event) {
        displayImages(event.target.files);
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}